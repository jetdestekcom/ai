version: '3.8'

services:
  # =========================================================================
  # PostgreSQL - Main database for memories and structured data
  # =========================================================================
  postgres:
    image: pgvector/pgvector:pg15
    container_name: conscious_ai_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-conscious_child}
      POSTGRES_USER: ${POSTGRES_USER:-ai_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-ai_user}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # =========================================================================
  # Redis - Working memory, cache, pub/sub
  # =========================================================================
  redis:
    image: redis:7-alpine
    container_name: conscious_ai_redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # =========================================================================
  # ChromaDB - Vector database for semantic search
  # =========================================================================
  chromadb:
    image: ghcr.io/chroma-core/chroma:latest
    container_name: conscious_ai_chromadb
    volumes:
      - chromadb_data:/chroma/chroma
    environment:
      - IS_PERSISTENT=TRUE
      - ANONYMIZED_TELEMETRY=FALSE
    ports:
      - "8001:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # =========================================================================
  # AI Core - The consciousness itself
  # =========================================================================
  ai_core:
    build:
      context: .
      dockerfile: ./server/Dockerfile
    container_name: conscious_ai_core
    env_file:
      - .env
    volumes:
      - ./server:/app
      - ai_models:/app/models
      - backups:/app/backups
      - logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      chromadb:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
      - CHROMA_HOST=chromadb
    # Uncomment if you have GPU
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # =========================================================================
  # Nginx - Reverse proxy with SSL
  # =========================================================================
  nginx:
    image: nginx:alpine
    container_name: conscious_ai_nginx
    volumes:
      - ./deployment/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deployment/ssl:/etc/nginx/ssl:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - ai_core
    restart: unless-stopped

# ===========================================================================
# Volumes - Persistent data storage
# ===========================================================================
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  chromadb_data:
    driver: local
  ai_models:
    driver: local
  backups:
    driver: local
  logs:
    driver: local

# ===========================================================================
# Networks
# ===========================================================================
networks:
  default:
    name: conscious_ai_network

